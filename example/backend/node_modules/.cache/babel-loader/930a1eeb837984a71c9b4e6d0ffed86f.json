{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lswee\\\\Documents\\\\Login\\\\frontend\\\\src\\\\LoginForm.js\";\nimport React from 'react';\nimport InputField from './InputField';\nimport SubmitButton from './SubmitButton';\nimport UserStore from './Stores/UserStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      buttonDisabled: false\n    };\n  }\n\n  setInputValue(property, val) {\n    val = val.trim();\n\n    if (val.length > 32) {\n      return;\n    }\n\n    this.setState({\n      [property]: val\n    });\n  }\n\n  resetForm() {\n    this.setState({\n      username: '',\n      password: '',\n      buttonDisabled: false\n    });\n  }\n\n  async doRegister() {\n    UserStore.register = true;\n  }\n\n  async doLogin() {\n    if (!this.state.username) {\n      return;\n    }\n\n    if (!this.state.password) {\n      return;\n    }\n\n    this.setState({\n      buttonDisabled: true\n    });\n\n    try {\n      let res = await fetch('/login', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: this.state.username,\n          password: this.state.password\n        })\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      } else if (result && result.success === false) {\n        this.resetForm();\n        alert(result.msg);\n      }\n    } catch (e) {\n      console.log(e);\n      this.resetForm();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginForm\",\n      children: [\"Login\", /*#__PURE__*/_jsxDEV(InputField, {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: this.state.username ? this.state.username : '',\n        onChange: val => this.setInputValue('username', val)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: this.state.password ? this.state.password : '',\n        onChange: val => this.setInputValue('password', val)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n        text: \"Login\",\n        disabled: this.state.buttonDisabled,\n        onClick: () => this.doLogin()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n        text: \"Forgot Password?\",\n        disabled: this.state.buttonDisabled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n        text: \"New to Rout? Click here to register\",\n        disabled: this.state.buttonDisabled,\n        onClick: () => this.doRegister()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["C:/Users/lswee/Documents/Login/frontend/src/LoginForm.js"],"names":["React","InputField","SubmitButton","UserStore","LoginForm","Component","constructor","props","state","username","password","buttonDisabled","setInputValue","property","val","trim","length","setState","resetForm","doRegister","register","doLogin","res","fetch","method","headers","body","JSON","stringify","result","json","success","isLoggedIn","alert","msg","e","console","log","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport InputField from './InputField';\r\nimport SubmitButton from './SubmitButton';\r\nimport UserStore from './Stores/UserStore';\r\n\r\nclass LoginForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      buttonDisabled: false\r\n    }\r\n  }\r\n\r\n  setInputValue(property, val) {\r\n    val = val.trim();\r\n    if (val.length > 32) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      [property]: val\r\n    })\r\n  }\r\n\r\n  resetForm() {\r\n    this.setState({\r\n      username: '',\r\n      password: '',\r\n      buttonDisabled: false\r\n    })\r\n  }\r\n\r\n  async doRegister() {\r\n    UserStore.register = true;\r\n  }\r\n  async doLogin() {\r\n    if (!this.state.username) {\r\n      return;\r\n    }\r\n    if (!this.state.password) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      buttonDisabled: true\r\n    })\r\n    try {\r\n      let res = await fetch('/login', {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          username: this.state.username,\r\n          password: this.state.password\r\n        })\r\n      });\r\n      let result = await res.json();\r\n      if (result && result.success) {\r\n        UserStore.isLoggedIn = true;\r\n        UserStore.username = result.username;\r\n      } else if (result && result.success === false) {\r\n        this.resetForm();\r\n        alert(result.msg);\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n      this.resetForm();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"loginForm\">\r\n          Login\r\n          <InputField\r\n            type='text'\r\n            placeholder='Username'\r\n            value={this.state.username ? this.state.username : ''}\r\n            onChange={ (val) => this.setInputValue('username', val)}\r\n            />\r\n\r\n          <InputField\r\n            type='password'\r\n            placeholder='Password'\r\n            value={this.state.password ? this.state.password : ''}\r\n            onChange={ (val) => this.setInputValue('password', val)}\r\n            />\r\n\r\n            <SubmitButton\r\n              text='Login'\r\n              disabled={this.state.buttonDisabled}\r\n              onClick={ () => this.doLogin()}\r\n            />\r\n\r\n            <SubmitButton\r\n              text='Forgot Password?'\r\n              disabled={this.state.buttonDisabled}\r\n            />\r\n\r\n            <SubmitButton\r\n              text='New to Rout? Click here to register'\r\n              disabled={this.state.buttonDisabled}\r\n              onClick={() => this.doRegister()}\r\n            />\r\n\r\n        </div>\r\n  );\r\n  }\r\n}\r\n\r\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}